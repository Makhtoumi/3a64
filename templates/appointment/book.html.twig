{% block body %}
    <div style="max-width: 600px; margin: 30px auto; padding: 20px; background-color: #f9f9f9; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
        <h1 style="font-size: 2em; text-align: center; color: #007bff; margin-bottom: 20px;">Book an Appointment</h1>

        {# Show Flash Message if there is an error #}
        {% for message in app.flashes('error') %}
            <div class="alert alert-danger">
                {{ message }}
            </div>
        {% endfor %}

        {{ form_start(form) }}
            <div style="margin-bottom: 15px;">
                {{ form_row(form.clientName, { 'attr': { 'class': 'form-control' } }) }}
                {% if form.clientName.vars.errors|length > 0 %}
                    <div class="invalid-feedback">
                        {{ form_errors(form.clientName) }}
                    </div>
                {% endif %}
            </div>

            <div style="margin-bottom: 15px;">
                <label for="appointment_doctor" class="form-label">Select Doctor</label>
                
                <div class="custom-select">
  {{ form_widget(form.doctor, { 'attr': { 'class': 'form-control' } }) }}
                {% if form.doctor.vars.errors|length > 0 %}
                    <div class="invalid-feedback">
                        {{ form_errors(form.doctor) }}
                    </div>
                {% endif %}
</div>
            </div>

            <div style="margin-bottom: 20px;">
                {{ form_row(form.appointmentDate, { 'attr': { 'class': 'form-control' } }) }}
                {% if form.appointmentDate.vars.errors|length > 0 %}
                    <div class="invalid-feedback">
                        {{ form_errors(form.appointmentDate) }}
                    </div>
                {% endif %}
            </div>

            <button type="submit" class="btn" style="width: 100%; padding: 12px; background-color: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; font-size: 1.1em; transition: background-color 0.3s;">
                Book Appointment
            </button>
        {{ form_end(form) }}

        <div style="margin-top: 20px; text-align: center;">
            <a href="{{ path('view_appointments') }}" style="color: #007bff; font-weight: bold; text-decoration: none; font-size: 1.1em; transition: color 0.3s;">
                View Your Appointments
            </a>
        </div>
    </div>

    <style>
        /* Styling for all form elements */
        .custom-select {
  position: relative;
  font-family: Arial;
}

.custom-select select {
  display: none; /*hide original SELECT element: */
}

.select-selected {
  background-color: white;
}

/* Style the arrow inside the select element: */
.select-selected:after {
  position: absolute;
  content: "";
  top: 14px;
  right: 10px;
  width: 0;
  height: 0;
  border: 6px solid transparent;
  border-color: #000 transparent transparent transparent;
}

/* Point the arrow upwards when the select box is open (active): */
.select-selected.select-arrow-active:after {
  border-color: transparent transparent #000 transparent;
  top: 7px;
}

/* style the items (options), including the selected item: */
.select-items div,.select-selected {
  color: #000000;
  padding: 8px 16px;
  border: 1px solid transparent;
  border-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;
  cursor: pointer;
}

/* Style items (options): */
.select-items {
  position: absolute;
  background-color: white;
  top: 100%;
  left: 0;
  right: 0;
  z-index: 99;
}

/* Hide the items when the select box is closed: */
.select-hide {
  display: none;
}

.select-items div:hover, .same-as-selected {
  background-color: rgba(0, 0, 0, 0.1);
}
        .form-control {
            width: 100%;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ddd;
            font-size: 1em;
            margin-bottom: 15px;
            box-sizing: border-box;
        }

        .form-control:focus {
            outline-color: #007bff;
        }

        /* Button style */
        .btn {
            font-size: 1.1em;
            padding: 12px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .btn:hover {
            background-color: #0056b3;
        }

        .invalid-feedback {
            color: red;
            font-size: 0.9em;
        }

        .alert-danger {
            color: red;
            background-color: #f8d7da;
            border-color: #f5c6cb;
            padding: 10px;
            margin-bottom: 20px;
        }

        /* Custom styling for the image in the select dropdown */
        select option img {
            width: 40px;
            height: 40px;
            margin-right: 10px;
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const doctorSelect = document.getElementById('appointment_doctor');
            const options = doctorSelect.querySelectorAll('option');

            options.forEach(option => {
                const doctorImage = option.getAttribute('data-picture');
                if (doctorImage) {
                    option.innerHTML = `<img src="${doctorImage}" alt="Doctor Image" style="width: 40px; height: 40px; margin-right: 10px;"> ${option.innerHTML}`;
                }
            });
            var x, i, j, l, ll, selElmnt, a, b, c;
/* Look for any elements with the class "custom-select": */
x = document.getElementsByClassName("custom-select");
l = x.length;
for (i = 0; i < l; i++) {
  selElmnt = x[i].getElementsByTagName("select")[0];
  ll = selElmnt.length;
  /* For each element, create a new DIV that will act as the selected item: */
  a = document.createElement("DIV");
  a.setAttribute("class", "select-selected");
  a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
  x[i].appendChild(a);
  /* For each element, create a new DIV that will contain the option list: */
  b = document.createElement("DIV");
  b.setAttribute("class", "select-items select-hide");
  for (j = 1; j < ll; j++) {
    /* For each option in the original select element,
    create a new DIV that will act as an option item: */
    c = document.createElement("DIV");
    c.innerHTML = selElmnt.options[j].innerHTML;
    c.addEventListener("click", function(e) {
        /* When an item is clicked, update the original select box,
        and the selected item: */
        var y, i, k, s, h, sl, yl;
        s = this.parentNode.parentNode.getElementsByTagName("select")[0];
        sl = s.length;
        h = this.parentNode.previousSibling;
        for (i = 0; i < sl; i++) {
          if (s.options[i].innerHTML == this.innerHTML) {
            s.selectedIndex = i;
            h.innerHTML = this.innerHTML;
            y = this.parentNode.getElementsByClassName("same-as-selected");
            yl = y.length;
            for (k = 0; k < yl; k++) {
              y[k].removeAttribute("class");
            }
            this.setAttribute("class", "same-as-selected");
            break;
          }
        }
        h.click();
    });
    b.appendChild(c);
  }
  x[i].appendChild(b);
  a.addEventListener("click", function(e) {
    /* When the select box is clicked, close any other select boxes,
    and open/close the current select box: */
    e.stopPropagation();
    closeAllSelect(this);
    this.nextSibling.classList.toggle("select-hide");
    this.classList.toggle("select-arrow-active");
  });
}

function closeAllSelect(elmnt) {
  /* A function that will close all select boxes in the document,
  except the current select box: */
  var x, y, i, xl, yl, arrNo = [];
  x = document.getElementsByClassName("select-items");
  y = document.getElementsByClassName("select-selected");
  xl = x.length;
  yl = y.length;
  for (i = 0; i < yl; i++) {
    if (elmnt == y[i]) {
      arrNo.push(i)
    } else {
      y[i].classList.remove("select-arrow-active");
    }
  }
  for (i = 0; i < xl; i++) {
    if (arrNo.indexOf(i)) {
      x[i].classList.add("select-hide");
    }
  }
}

/* If the user clicks anywhere outside the select box,
then close all select boxes: */
document.addEventListener("click", closeAllSelect);
        });
    </script>
{% endblock %}
